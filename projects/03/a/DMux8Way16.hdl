CHIP DMux8Way16 {

    IN in[16], sel[3];
    OUT a[16], b[16], c[16], d[16],
        e[16], f[16], g[16], h[16];

    PARTS:
    DMux8Way(in=in[0], sel=sel, a=a[0], b=b[0], c=c[0], d=d[0], e=e[0], f=f[0], g=g[0], h=h[0]);
    DMux8Way(in=in[1], sel=sel, a=a[1], b=b[1], c=c[1], d=d[1], e=e[1], f=f[1], g=g[1], h=h[1]);
    DMux8Way(in=in[2], sel=sel, a=a[2], b=b[2], c=c[2], d=d[2], e=e[2], f=f[2], g=g[2], h=h[2]);
    DMux8Way(in=in[3], sel=sel, a=a[3], b=b[3], c=c[3], d=d[3], e=e[3], f=f[3], g=g[3], h=h[3]);
    DMux8Way(in=in[4], sel=sel, a=a[4], b=b[4], c=c[4], d=d[4], e=e[4], f=f[4], g=g[4], h=h[4]);
    DMux8Way(in=in[5], sel=sel, a=a[5], b=b[5], c=c[5], d=d[5], e=e[5], f=f[5], g=g[5], h=h[5]);
    DMux8Way(in=in[6], sel=sel, a=a[6], b=b[6], c=c[6], d=d[6], e=e[6], f=f[6], g=g[6], h=h[6]);
    DMux8Way(in=in[7], sel=sel, a=a[7], b=b[7], c=c[7], d=d[7], e=e[7], f=f[7], g=g[7], h=h[7]);
    DMux8Way(in=in[8], sel=sel, a=a[8], b=b[8], c=c[8], d=d[8], e=e[8], f=f[8], g=g[8], h=h[8]);
    DMux8Way(in=in[9], sel=sel, a=a[9], b=b[9], c=c[9], d=d[9], e=e[9], f=f[9], g=g[9], h=h[9]);
    DMux8Way(in=in[10], sel=sel, a=a[10], b=b[10], c=c[10], d=d[10], e=e[10], f=f[10], g=g[10], h=h[10]);
    DMux8Way(in=in[11], sel=sel, a=a[11], b=b[11], c=c[11], d=d[11], e=e[11], f=f[11], g=g[11], h=h[11]);
    DMux8Way(in=in[12], sel=sel, a=a[12], b=b[12], c=c[12], d=d[12], e=e[12], f=f[12], g=g[12], h=h[12]);
    DMux8Way(in=in[13], sel=sel, a=a[13], b=b[13], c=c[13], d=d[13], e=e[13], f=f[13], g=g[13], h=h[13]);
    DMux8Way(in=in[14], sel=sel, a=a[14], b=b[14], c=c[14], d=d[14], e=e[14], f=f[14], g=g[14], h=h[14]);
    DMux8Way(in=in[15], sel=sel, a=a[15], b=b[15], c=c[15], d=d[15], e=e[15], f=f[15], g=g[15], h=h[15]);
}
